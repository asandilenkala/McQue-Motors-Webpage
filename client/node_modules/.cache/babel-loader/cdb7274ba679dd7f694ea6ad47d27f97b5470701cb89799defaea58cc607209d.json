{"ast":null,"code":"var _jsxFileName = \"/Users/lordblack/Desktop/MERN/client/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CarForm from './CarForm';\nimport CarList from './CarList';\nimport * as Components from './Components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [isAdmin, setIsAdmin] = useState(true); // Simulating admin login status\n  const [cars, setCars] = useState([]); // State to hold the list of cars\n\n  const addCar = newCar => {\n    setCars([...cars, newCar]); // Add new car to the list\n  };\n\n  // Function to fetch cars from the API\n  const fetchCars = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/cars'); // Fetching car data from API\n      setCars(response.data); // Store the fetched cars in the state\n    } catch (error) {\n      console.error('Error fetching cars:', error);\n    }\n  };\n\n  // Function to delete a car (assumes you have a delete endpoint on the backend)\n  const deleteCar = async index => {\n    const carId = cars[index]._id; // Assuming your car documents have an `_id` field\n    try {\n      await axios.delete(`http://localhost:5000/cars/${carId}`);\n      setCars(cars.filter((_, i) => i !== index)); // Remove car from state after deletion\n    } catch (error) {\n      console.error('Error deleting car:', error);\n    }\n  };\n\n  // Fetch cars when the component mounts\n  useEffect(() => {\n    fetchCars();\n  }, []);\n  if (!isAdmin) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Unauthorized access. Admins only.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  }\n  console.log('Cars in Dashboard:', cars); // Debugging line\n\n  return (\n    /*#__PURE__*/\n    // Post Method store data from dashboard, Get Method to display data to carlist?????????\n    _jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: /*#__PURE__*/_jsxDEV(Components.Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Admin Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(CarForm, {\n          addCar: addCar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }, this), \" \", /*#__PURE__*/_jsxDEV(CarList, {\n          cars: cars\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(Dashboard, \"TqTedAtE6aX3i+/jntgdcTmJsXg=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","CarForm","CarList","Components","jsxDEV","_jsxDEV","Dashboard","_s","isAdmin","setIsAdmin","cars","setCars","addCar","newCar","fetchCars","response","axios","get","data","error","console","deleteCar","index","carId","_id","delete","filter","_","i","children","fileName","_jsxFileName","lineNumber","columnNumber","log","className","Container","_c","$RefreshReg$"],"sources":["/Users/lordblack/Desktop/MERN/client/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CarForm from './CarForm';\nimport CarList from './CarList';\nimport * as Components from './Components';\n\nconst Dashboard = () => {\n  const [isAdmin, setIsAdmin] = useState(true); // Simulating admin login status\n  const [cars, setCars] = useState([]); // State to hold the list of cars\n\n  const addCar = (newCar) => {\n    setCars([...cars, newCar]); // Add new car to the list\n  };\n\n  // Function to fetch cars from the API\n  const fetchCars = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/cars'); // Fetching car data from API\n      setCars(response.data);  // Store the fetched cars in the state\n    } catch (error) {\n      console.error('Error fetching cars:', error);\n    }\n  };\n\n  // Function to delete a car (assumes you have a delete endpoint on the backend)\n  const deleteCar = async (index) => {\n    const carId = cars[index]._id;  // Assuming your car documents have an `_id` field\n    try {\n      await axios.delete(`http://localhost:5000/cars/${carId}`);\n      setCars(cars.filter((_, i) => i !== index));  // Remove car from state after deletion\n    } catch (error) {\n      console.error('Error deleting car:', error);\n    }\n  };\n\n  // Fetch cars when the component mounts\n  useEffect(() => {\n    fetchCars();\n  }, []);\n\n  if (!isAdmin) {\n    return <p>Unauthorized access. Admins only.</p>;\n  }\n\n  console.log('Cars in Dashboard:', cars); // Debugging line\n\n  return (// Post Method store data from dashboard, Get Method to display data to carlist?????????\n    <div className=\"dashboard\"> \n      <Components.Container>\n      <h2>Admin Dashboard</h2>\n      <CarForm addCar={addCar} /> {/* Pass addCar function to CarForm */}\n      <CarList cars={cars}/> {/* Pass cars list and deleteCar function to CarList */}\n      </Components.Container>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}