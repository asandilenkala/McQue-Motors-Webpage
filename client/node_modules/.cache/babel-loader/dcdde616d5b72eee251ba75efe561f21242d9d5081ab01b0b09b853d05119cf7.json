{"ast":null,"code":"var _jsxFileName = \"/Users/lordblack/Desktop/MERN/client/src/components/CarList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CarList = () => {\n  _s();\n  const [cars, setCars] = useState([]); // State to hold the list of cars\n\n  // Function to fetch cars from the API\n  const fetchCars = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/cars'); // Fetching car data from API\n      setCars(response.data); // Store the fetched cars in the state\n    } catch (error) {\n      console.error('Error fetching cars:', error);\n    }\n  };\n\n  // Fetch cars when the component mounts\n  useEffect(() => {\n    fetchCars();\n  }, []);\n  console.log('Cars in CarList:', cars);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Buy Car\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-wrapper\",\n        children: cars.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No cars available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this) : cars.map((car, index) =>\n        /*#__PURE__*/\n        // Get Method to display data from the db.\n        _jsxDEV(\"div\", {\n          className: \"item-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"item-img\",\n            src: car.image,\n            alt: car.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item-details\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-name\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: car.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"item-description\",\n                children: car.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"price\",\n                children: [\"R\", car.price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(CarList, \"/EQt6wAxOgtQYDavlJ/SWb5B/tI=\");\n_c = CarList;\nexport default CarList;\nvar _c;\n$RefreshReg$(_c, \"CarList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","CarList","_s","cars","setCars","fetchCars","response","get","data","error","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","length","map","car","index","src","image","alt","name","description","price","_c","$RefreshReg$"],"sources":["/Users/lordblack/Desktop/MERN/client/src/components/CarList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst CarList = () => {\n  const [cars, setCars] = useState([]); // State to hold the list of cars\n\n  // Function to fetch cars from the API\n  const fetchCars = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/cars'); // Fetching car data from API\n      setCars(response.data);  // Store the fetched cars in the state\n    } catch (error) {\n      console.error('Error fetching cars:', error);\n    }\n  };\n\n\n  // Fetch cars when the component mounts\n  useEffect(() => {\n    fetchCars();\n  }, []);\n\n\n  console.log('Cars in CarList:', cars);\n\n  return (<>\n    <div className=\"main-menu\">\n      <h2>Buy Car</h2>\n      <div className=\"item-wrapper\">\n        {cars.length === 0 ? (\n          <p>No cars available.</p>\n        ) : (\n          cars.map((car, index) => ( // Get Method to display data from the db.\n            <div key={index} className=\"item-card\">\n              <img className=\"item-img\" src={car.image} alt={car.name} />\n              <div className=\"item-details\">\n                <div className=\"item-name\">\n                  <h4>{car.name}</h4>\n                  <p className=\"item-description\">{car.description}</p>\n                  <p className=\"price\">R{car.price}</p>\n                </div>\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n    </>);\n};\n\nexport default CarList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}