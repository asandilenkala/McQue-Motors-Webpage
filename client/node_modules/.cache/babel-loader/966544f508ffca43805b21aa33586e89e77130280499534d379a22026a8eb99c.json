{"ast":null,"code":"var _jsxFileName = \"/Users/lordblack/Desktop/MERN/client/src/components/CarForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CarForm = ({\n  addCar\n}) => {\n  _s();\n  // Accept addCar as a prop\n  const [car, setCar] = useState({\n    name: '',\n    description: '',\n    price: '',\n    image: null\n  });\n  const handleChange = e => {\n    setCar({\n      ...car,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleImageChange = e => {\n    setCar({\n      ...car,\n      image: URL.createObjectURL(e.target.files[0])\n    }); // Display image in CarList\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    addCar(car); // Call the addCar function passed down from Dashboard\n    setCar({\n      name: '',\n      description: '',\n      price: '',\n      image: null\n    }); // Reset form after submission\n  };\n  const collectData = async () => {\n    try {\n      console.warn(name, description, price, image);\n\n      // Make the POST request\n      let result = await fetch(\"http://localhost:5000/register\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          name,\n          description,\n          price,\n          image\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Check if the response is OK\n      if (result.ok) {\n        // Convert the response to JSON if it's valid\n        let data = await result.json();\n        console.warn(data);\n        localStorage.setItem(\"user\", JSON.stringify());\n        navigate('/');\n      } else {\n        console.error(`Error: ${result.statusText} (${result.status})`);\n      }\n    } catch (error) {\n      // Handle any errors from the fetch or JSON parsing\n      console.error('Fetch error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"inputBox\",\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Car Name\",\n      value: car.name,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"inputBox\",\n      type: \"text\",\n      name: \"description\",\n      placeholder: \"Description\",\n      value: car.description,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"inputBox\",\n      type: \"number\",\n      name: \"price\",\n      placeholder: \"Price in Rand\",\n      value: car.price,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"inputBox\",\n      type: \"file\",\n      name: \"image\",\n      onChange: handleImageChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"registerButton\",\n      type: \"submit\",\n      children: \"Add Car\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(CarForm, \"AdCPvgXdUKyZpXrOnN7HQIcfWj0=\");\n_c = CarForm;\nexport default CarForm;\nvar _c;\n$RefreshReg$(_c, \"CarForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CarForm","addCar","_s","car","setCar","name","description","price","image","handleChange","e","target","value","handleImageChange","URL","createObjectURL","files","handleSubmit","preventDefault","collectData","console","warn","result","fetch","method","body","JSON","stringify","headers","ok","data","json","localStorage","setItem","navigate","error","statusText","status","onSubmit","children","className","type","placeholder","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lordblack/Desktop/MERN/client/src/components/CarForm.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst CarForm = ({ addCar }) => { // Accept addCar as a prop\n  const [car, setCar] = useState({\n    name: '',\n    description: '',\n    price: '',\n    image: null,\n  });\n\n  const handleChange = (e) => {\n    setCar({ ...car, [e.target.name]: e.target.value });\n  };\n\n  const handleImageChange = (e) => {\n    setCar({ ...car, image: URL.createObjectURL(e.target.files[0]) }); // Display image in CarList\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    addCar(car); // Call the addCar function passed down from Dashboard\n    setCar({ name: '', description: '', price: '', image: null }); // Reset form after submission\n  };\n\n  const collectData = async () => {\n    try {\n        console.warn(name, description, price, image);\n\n        // Make the POST request\n        let result = await fetch(\"http://localhost:5000/register\", {\n            method: \"POST\",\n            body: JSON.stringify({ name, description, price, image }),\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        });\n\n        // Check if the response is OK\n        if (result.ok) {\n            // Convert the response to JSON if it's valid\n            let data = await result.json();\n            console.warn(data);\n            localStorage.setItem(\"user\", JSON.stringify());\n            navigate('/');\n        } else {\n            console.error(`Error: ${result.statusText} (${result.status})`);\n        }\n    } catch (error) {\n        // Handle any errors from the fetch or JSON parsing\n        console.error('Fetch error:', error);\n    }\n};\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        className='inputBox'\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Car Name\"\n        value={car.name}\n        onChange={handleChange}\n        required\n      />\n      <input\n        className='inputBox'\n        type=\"text\"\n        name=\"description\"\n        placeholder=\"Description\"\n        value={car.description}\n        onChange={handleChange}\n        required\n      />\n      <input\n        className='inputBox'\n        type=\"number\"\n        name=\"price\"\n        placeholder=\"Price in Rand\"\n        value={car.price}\n        onChange={handleChange}\n        required\n      />\n      <input\n        className='inputBox'\n        type=\"file\"\n        name=\"image\"\n        onChange={handleImageChange}\n        required\n      />\n      <button className='registerButton' type=\"submit\">Add Car</button>\n    </form>\n  );\n};\n\nexport default CarForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}