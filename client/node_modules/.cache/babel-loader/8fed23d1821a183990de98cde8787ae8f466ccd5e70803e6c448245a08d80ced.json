{"ast":null,"code":"var _jsxFileName = \"/Users/lordblack/Desktop/MERN/client/src/components/UpdateCar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateCar = ({\n  car,\n  updateCar\n}) => {\n  _s();\n  const [updatedCar, setUpdatedCar] = useState({\n    name: car.name,\n    description: car.description,\n    price: car.price,\n    image: car.image\n  });\n\n  // Handle text input changes\n  const handleChange = e => {\n    setUpdatedCar({\n      ...updatedCar,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Handle image file input change\n  const handleImageChange = e => {\n    setUpdatedCar({\n      ...updatedCar,\n      image: e.target.files[0]\n    });\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Prepare FormData object to send updated form data including image\n    const formData = new FormData();\n    formData.append('name', updatedCar.name);\n    formData.append('description', updatedCar.description);\n    formData.append('price', updatedCar.price);\n    if (updatedCar.image instanceof File) {\n      formData.append('image', updatedCar.image);\n    }\n    try {\n      // Send PUT request to update car data\n      const response = await axios.put(`http://localhost:5000/car/update/${car.id}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      // Check if the response was successful before proceeding\n      if (response.status === 200) {\n        updateCar(response.data); // Pass the updated car data to the parent component\n        alert('Car updated successfully!');\n      } else {\n        console.error('Failed to update car. Server returned status:', response.status);\n      }\n    } catch (error) {\n      console.error('Error updating car data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"inputBox\",\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Car Name\",\n      value: updatedCar.name,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"inputBox\",\n      type: \"text\",\n      name: \"description\",\n      placeholder: \"Description\",\n      value: updatedCar.description,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"inputBox\",\n      type: \"number\",\n      name: \"price\",\n      placeholder: \"Price in Rand\",\n      value: updatedCar.price,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"inputBox\",\n      type: \"file\",\n      name: \"image\",\n      onChange: handleImageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"registerButton\",\n      type: \"submit\",\n      children: \"Update Car\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateCar, \"ZxA4rT9lSITxGSS7xr+oxCl7fBA=\");\n_c = UpdateCar;\nexport default UpdateCar;\nvar _c;\n$RefreshReg$(_c, \"UpdateCar\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UpdateCar","car","updateCar","_s","updatedCar","setUpdatedCar","name","description","price","image","handleChange","e","target","value","handleImageChange","files","handleSubmit","preventDefault","formData","FormData","append","File","response","put","id","headers","status","data","alert","console","error","onSubmit","children","className","type","placeholder","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lordblack/Desktop/MERN/client/src/components/UpdateCar.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst UpdateCar = ({ car, updateCar }) => {\n  const [updatedCar, setUpdatedCar] = useState({\n    name: car.name,\n    description: car.description,\n    price: car.price,\n    image: car.image,\n  });\n\n  // Handle text input changes\n  const handleChange = (e) => {\n    setUpdatedCar({ ...updatedCar, [e.target.name]: e.target.value });\n  };\n\n  // Handle image file input change\n  const handleImageChange = (e) => {\n    setUpdatedCar({ ...updatedCar, image: e.target.files[0] });\n  };\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Prepare FormData object to send updated form data including image\n    const formData = new FormData();\n    formData.append('name', updatedCar.name);\n    formData.append('description', updatedCar.description);\n    formData.append('price', updatedCar.price);\n    if (updatedCar.image instanceof File) {\n      formData.append('image', updatedCar.image);\n    }\n\n    try {\n      // Send PUT request to update car data\n      const response = await axios.put(`http://localhost:5000/car/update/${car.id}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      // Check if the response was successful before proceeding\n      if (response.status === 200) {\n        updateCar(response.data); // Pass the updated car data to the parent component\n        alert('Car updated successfully!');\n      } else {\n        console.error('Failed to update car. Server returned status:', response.status);\n      }\n    } catch (error) {\n      console.error('Error updating car data:', error);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        className='inputBox'\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Car Name\"\n        value={updatedCar.name}\n        onChange={handleChange}\n        required\n      />\n      <input\n        className='inputBox'\n        type=\"text\"\n        name=\"description\"\n        placeholder=\"Description\"\n        value={updatedCar.description}\n        onChange={handleChange}\n        required\n      />\n      <input\n        className='inputBox'\n        type=\"number\"\n        name=\"price\"\n        placeholder=\"Price in Rand\"\n        value={updatedCar.price}\n        onChange={handleChange}\n        required\n      />\n      <input\n        className='inputBox'\n        type=\"file\"\n        name=\"image\"\n        onChange={handleImageChange}\n      />\n      <button className='registerButton' type=\"submit\">Update Car</button>\n    </form>\n  );\n};\n\nexport default UpdateCar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}