{"ast":null,"code":"var _jsxFileName = \"/Users/lordblack/Desktop/MERN/client/src/components/SignUp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUp = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const collectData = async () => {\n    try {\n      console.warn(name, email, password);\n\n      // Make the POST request\n      let result = await fetch(\"http://localhost:5000/register\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          name,\n          email,\n          password\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Check if the response is OK\n      if (result.ok) {\n        // Convert the response to JSON if it's valid\n        let data = await result.json();\n        console.warn(data);\n        localStorage.setItem(\"user\", JSON.stringify());\n        navigate('/');\n      } else {\n        console.error(`Error: ${result.statusText} (${result.status})`);\n      }\n    } catch (error) {\n      // Handle any errors from the fetch or JSON parsing\n      console.error('Fetch error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"inputBox\",\n      type: \"text\",\n      placeholder: \"Enter Username\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"inputBox\",\n      type: \"text\",\n      placeholder: \"Enter Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"inputBox\",\n      type: \"password\",\n      placeholder: \"Enter Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: collectData,\n      className: \"registerButton\",\n      type: \"button\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(SignUp, \"csJiuSlQmiH49sngUzydjkZ0k9I=\", false, function () {\n  return [useNavigate];\n});\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","SignUp","_s","name","setName","email","setEmail","password","setPassword","navigate","collectData","console","warn","result","fetch","method","body","JSON","stringify","headers","ok","data","json","localStorage","setItem","error","statusText","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/lordblack/Desktop/MERN/client/src/components/SignUp.js"],"sourcesContent":["import React,{useState} from 'react';\nimport {useNavigate} from 'react-router-dom';\n\nconst SignUp = () => {\n    const [name, setName]=useState('');\n    const [email, setEmail]=useState('');\n    const [password, setPassword]=useState('');\n\n    const navigate = useNavigate();\n\n    const collectData = async () => {\n        try {\n            console.warn(name, email, password);\n    \n            // Make the POST request\n            let result = await fetch(\"http://localhost:5000/register\", {\n                method: \"POST\",\n                body: JSON.stringify({ name, email, password }),\n                headers: {\n                    'Content-Type': 'application/json',\n                }\n            });\n    \n            // Check if the response is OK\n            if (result.ok) {\n                // Convert the response to JSON if it's valid\n                let data = await result.json();\n                console.warn(data);\n                localStorage.setItem(\"user\", JSON.stringify());\n                navigate('/');\n            } else {\n                console.error(`Error: ${result.statusText} (${result.status})`);\n            }\n        } catch (error) {\n            // Handle any errors from the fetch or JSON parsing\n            console.error('Fetch error:', error);\n        }\n    };\n    \n\n    return (\n        <div className='signup'>\n            <h1>Register</h1>\n            <input className='inputBox' type='text' placeholder='Enter Username'\n            value={name} onChange={(e)=>setName(e.target.value)}\n            />\n            <input className='inputBox' type='text' placeholder='Enter Email'\n            value={email} onChange={(e)=>setEmail(e.target.value)}\n            />\n            <input className='inputBox' type='password' placeholder='Enter Password'\n            value={password} onChange={(e)=>setPassword(e.target.value)}\n            />\n            <button onClick={collectData} className='registerButton' type='button'>Sign Up</button>\n        </div>\n    )\n}\n\nexport default SignUp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}